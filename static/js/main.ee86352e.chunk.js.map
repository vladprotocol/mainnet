{"version":3,"sources":["state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/actions.ts","hooks/useRefresh.ts","utils/getRpcUrl.ts","contexts/RefreshContext.tsx","state/index.ts","state/prices/index.ts","components/layout/Container.tsx","components/layout/Page.tsx","contexts/BlockContext.tsx","contexts/Localisation/translationsContext.ts","config/constants/types.ts","utils/multicall.ts","config/constants/contracts.ts","utils/addressHelpers.ts","config/constants/pools.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","config/constants/farms.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/pancake.png","components/Menu/telegram.svg","components/Menu/twitter.svg","components/Menu/medium.svg","components/Menu/vlad-circle.png","components/Menu/life.png","components/Menu/bg-footer.jpg","components/Menu/index.tsx","components/PageLoader.tsx","App.tsx","Providers.tsx","index.tsx","utils/web3.ts","state/hooks.ts"],"names":["fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","CHAIN_ID","calls","address","tokenAddresses","name","params","quoteTokenAdresses","isTokenOnly","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","tokenAmount","BigNumber","div","pow","tokenPriceVsQuote","tokenSymbol","QuoteToken","BUSD","quoteTokenSymbol","lpTotalInQuoteToken","times","lpTokenRatio","quoteTokenAmount","comparedTo","masterchefABI","pid","info","totalAllocPoint","lifePerBlock","allocPoint","_hex","poolWeight","toJSON","toNumber","multiplier","toString","depositFeeBP","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","nodes","process","getNodeUrl","randomIndex","random","length","React","createContext","RefreshContextProvider","children","useState","setSlow","setFast","useEffect","interval","setInterval","prev","clearInterval","Provider","value","store","configureStore","devTools","reducer","farmsReducer","pools","poolsReducer","prices","pricesReducer","useAppDispatch","useDispatch","fetchPrices","createAsyncThunk","fetch","response","json","updated_at","Object","keys","reduce","accum","token","toLowerCase","parseFloat","price","pricesSlice","isLoading","lastUpdated","extraReducers","builder","addCase","pending","fulfilled","Container","styled","theme","mediaQueries","sm","Page","lg","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","web3","getWeb3","eth","getBlockNumber","blockNumber","current","defaultTranslationState","translations","setTranslations","TranslationsContext","PoolCategory","abi","multi","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","calldata","call","encodeFunctionData","methods","aggregate","returnData","res","i","decodeFunctionResult","cake","56","97","masterChef","wbnb","lottery","lotteryNFT","mulltiCall","busd","getCakeAddress","addresses","chainId","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","sousId","tokenName","stakingTokenName","VLADBUSD","earningToken","stakingTokenAddress","contractAddress","poolCategory","CORE","projectLink","harvest","tokenPerBlock","sortOrder","isFinished","contracts","COMMUNITY","VLADSTOS","VLAD","BNBSTOS","BNB","fetchPoolsBlockLimits","poolsWithEnd","poolsConfig","filter","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","startBlock","endBlock","fetchPoolsTotalStatking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","bnbPools","nonMasterPools","masterChefContract","masterChefABI","fetchPoolsAllowance","allowances","acc","pool","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","amount","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingLife","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","fetchPoolsPublicDataAsync","blockLimits","totalStakings","liveData","blockLimit","totalStaking","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","risk","lpSymbol","GlobalStyle","createGlobalStyle","colors","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","parseInt","REACT_APP_CROWDIN_PROJECTID","StringTranslations","REACT_APP_CROWDIN_APIKEY","storedLangCode","localStorage","getItem","storedLang","getStoredLang","console","log","then","r","translationApiResponse","catch","e","error","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","useTheme","StyledThemeCopntext","config","label","icon","href","items","Footer","bgFooter","Social","SocialFooter","SocialImageFooter","img","Logo","LiveLinkGroup","LiveLink","SocialLink","FooterCopyRight","AudioPlayer","audio","AudioDescription","span","AudioDescriptionA","CustomButton","Button","CustomI","vladValue","Menu","props","useWallet","connect","reset","cakePriceUsd","usePriceCakeBusd","result","Math","round","usd","className","target","rel","controls","src","type","kind","link","telegramLogo","alt","mediumLogo","twitterLogo","vladLogo","lifeLogo","pancakeLogo","variant","login","logout","currentLang","langs","setLang","links","priceLink","RankingLink","SocialFooterLink","title","SocialHeaderLink","Wrapper","PageLoader","Home","lazy","Farms","Pools","NotFound","Nft","Legendary","Epic","MyCollection","MyEpicCollection","MyLegendaryCollection","Detail","LegendaryDetail","EpicDetail","EXPONENTIAL_AT","DECIMAL_PLACES","App","window","useFetchPublicData","useFetchPriceList","Global","fallback","path","exact","tokenMode","component","to","memo","Providers","rpcUrl","getRpcUrl","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById","RPC_URL","httpProvider","Web3","providers","HttpProvider","timeout","getContract","contractOptions","ZERO","useFarms","useSelector","useFarmFromPid","useFarmUser","usePools","useGetApiPrice","cakeBnbFarm","bnbBusdFarm","bnbBusdPrice","usePriceBnbBusd","useTotalValue","bnbPrice","cakePrice","val","CAKE","plus"],"mappings":"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","file":"static/js/main.ee86352e.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\nimport { QuoteToken } from '../../config/constants/types'\n\n// const web3 = require('web3');\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      ] = await multicall(erc20, calls)\n\n      let tokenAmount\n      let lpTotalInQuoteToken\n      let tokenPriceVsQuote\n      if (farmConfig.isTokenOnly) {\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals))\n        if (farmConfig.tokenSymbol === QuoteToken.BUSD && farmConfig.quoteTokenSymbol === QuoteToken.BUSD) {\n          tokenPriceVsQuote = new BigNumber(1)\n        } else {\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\n        }\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote)\n      } else {\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n        // Total value in staking in quote token value\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(18))\n          .times(new BigNumber(2))\n          .times(lpTokenRatio)\n\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(lpTokenRatio)\n\n        if (tokenAmount.comparedTo(0) > 0) {\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount)\n        } else {\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\n        }\n      }\n\n      const [info, totalAllocPoint, lifePerBlock] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'lifePerBlock',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount,\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\n        poolWeight: poolWeight.toNumber(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP,\n        lifePerBlock: new BigNumber(lifePerBlock).toNumber(),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingLife',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { configureStore } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport pricesReducer from './prices'\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n    prices: pricesReducer,\n  },\n})\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport default store\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { PriceApiResponse, PriceApiThunk, PriceState } from 'state/types'\n\nconst initialState: PriceState = {\n  isLoading: false,\n  lastUpdated: null,\n  data: null,\n}\n\n// Thunks\nexport const fetchPrices = createAsyncThunk<PriceApiThunk>('prices/fetch', async () => {\n  const response = await fetch('https://api.pancakeswap.info/api/v2/tokens')\n  const data = (await response.json()) as PriceApiResponse\n  // Return normalized token names\n  return {\n    updated_at: data.updated_at,\n    data: Object.keys(data.data).reduce((accum, token) => {\n      return {\n        ...accum,\n        [token.toLowerCase()]: parseFloat(data.data[token].price),\n      }\n    }, {}),\n  }\n})\n\nexport const pricesSlice = createSlice({\n  name: 'prices',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchPrices.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiThunk>) => {\n      state.isLoading = false\n      state.lastUpdated = action.payload.updated_at\n      state.data = action.payload.data\n    })\n  },\n})\n\nexport default pricesSlice.reducer\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n  'VLAD' = 'VLAD',\n  'VLADBUSD' = 'VLAD-BUSD',\n  'VLADSTOS' = 'VLAD-STOS',\n  'BNBSTOS' = 'BNB-STOS',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  risk: number\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  earningToken?: string\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n  quoteTokenSymbol: string\n  quoteTokenAdresses: { 56: string, 97: string }\n}\n\nexport type Nft = {\n  name: string\n  metadata: string\n  description: string\n  originalImage: string\n  previewImage: string\n  fileType: string\n  blurImage: string\n  sortOrder: number\n  nftId: number\n  tokenAmount: number\n  tokenSupply: number\n  nftFarmContract: string\n  nftContract: string\n}\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","export default {\n  cake: {\n    56: '0x50f4220C82c9325dC99f729C3328FB5c338BEaae',\n    97: '0xADA2270B0CB5b6254d3d48A6fEE55b72693B746A',\n  },\n  masterChef: {\n    56: '0x67905ff1Ada0C11720E7298840206E5bdB8d3646',\n    97: '0xE37Aa693d2Ab77721E11e55bfBC723cf4457b78E',\n  },\n  wbnb: {\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    97: '0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd',\n  },\n  lottery: {\n    56: '',\n    97: '',\n  },\n  lotteryNFT: {\n    56: '',\n    97: '',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    97: '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n  },\n}\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\nimport contracts from './contracts'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 1,\n    tokenName: 'SAFESTOS',\n    stakingTokenName: QuoteToken.VLADBUSD,\n    earningToken: '0x9eAB0a93b0cd5d904493694F041BdCedb97b88C6',\n    stakingTokenAddress: '0x60d5e86c0074b56e52a7540b3bf36c399e9f3038',\n    contractAddress: {\n      97: '0x0',\n      56: '0x870A6E86534238a8Ce262eAd0Da401Aafe71BA5b',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://stos.finance/',\n    harvest: true,\n    tokenPerBlock: '0.002480159',\n    sortOrder: 1,\n    isFinished: true,\n    tokenDecimals: 18,\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd\n  },\n  {\n    sousId: 2,\n    tokenName: 'SAFESTOS',\n    stakingTokenName: QuoteToken.VLADBUSD,\n    earningToken: '0x9eAB0a93b0cd5d904493694F041BdCedb97b88C6',\n    stakingTokenAddress: '0x60d5e86c0074b56e52a7540b3bf36c399e9f3038',\n    contractAddress: {\n      97: '0x0',\n      56: '0x376006485943D1c7539bDe36A9f8d6302848469e',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    projectLink: 'https://stos.finance/',\n    harvest: true,\n    tokenPerBlock: '0.002480159',\n    sortOrder: 1,\n    isFinished: false,\n    tokenDecimals: 18,\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd\n  },\n  {\n    sousId: 3,\n    tokenName: 'SAFESTOS',\n    stakingTokenName: QuoteToken.VLADSTOS,\n    earningToken: '0x9eAB0a93b0cd5d904493694F041BdCedb97b88C6',\n    stakingTokenAddress: '0x02E0A57343ef22E4c673AFF64Dc56C71caeD86c1',\n    contractAddress: {\n      97: '0x0',\n      56: '0xd7932B581f5d1CAf4548Ad1746814a1E809a8f80',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    projectLink: 'https://stos.finance/',\n    harvest: true,\n    tokenPerBlock: '0.001653439',\n    sortOrder: 1,\n    isFinished: false,\n    tokenDecimals: 18,\n    quoteTokenSymbol: QuoteToken.VLAD,\n    quoteTokenAdresses: contracts.cake\n  },\n  {\n    sousId: 4,\n    tokenName: 'SAFESTOS',\n    stakingTokenName: QuoteToken.BNBSTOS,\n    earningToken: '0x9eAB0a93b0cd5d904493694F041BdCedb97b88C6',\n    stakingTokenAddress: '0xe0E3F3698ba35487e5285fDfd31a5B8d8F564D8b',\n    contractAddress: {\n      97: '0x0',\n      56: '0x29a4f42d5793868181F55120F3b10DecD314493F',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    projectLink: 'https://stos.finance/',\n    harvest: true,\n    tokenPerBlock: '0.004133598',\n    sortOrder: 1,\n    isFinished: false,\n    tokenDecimals: 18,\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb\n  },\n]\n\nexport default pools\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getWbnbAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: poolConfig.contractAddress[CHAIN_ID],\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: poolConfig.contractAddress[CHAIN_ID],\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStatking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\n  const bnbPool = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingTokenAddress,\n      name: 'balanceOf',\n      params: [poolConfig.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [poolConfig.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingLife('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 2,\n    risk: 3,\n    lpSymbol: 'VLAD-BNB LP',\n    lpAddresses: {\n      97: '0xb7419aC5Ff93Ac91047585A28CB37f765B1090B6',\n      56: '0x3512D9a9d3F369e3258D4a75D3B471CA9F37CC86',\n    },\n    tokenSymbol: 'VLAD',\n    tokenAddresses: {\n      97: '0xa800D23CCc013d2cFF18665cCc4709d45D969841',\n      56: '0x279d41f3f78fe5C1f0BA41aE963d6E545113C973',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb\n  },\n  {\n    pid: 3,\n    risk: 3,\n    lpSymbol: 'VLAD-BUSD LP',\n    lpAddresses: {\n      97: '0x8B7635d524d1eD9518F3Dc32980E13584BB175d8',\n      56: '0x99ffD623a46362d61D5E0F9ABf9728A2A429acf5',\n    },\n    tokenSymbol: 'VLAD',\n    tokenAddresses: {\n      97: '0xa800D23CCc013d2cFF18665cCc4709d45D969841',\n      56: '0x279d41f3f78fe5C1f0BA41aE963d6E545113C973',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd\n  },\n  {\n    pid: 0,\n    risk: 5,\n    lpSymbol: 'LIFE-BUSD LP',\n    lpAddresses: {\n      97: '0xE2115e605a81dc6CB448f5111DE6bEf5B8a760DA',\n      56: '0x5eE167b75118125e7d46add5cE61F749BB977A00',\n    },\n    tokenSymbol: 'LIFE',\n    tokenAddresses: {\n      97: '0xADA2270B0CB5b6254d3d48A6fEE55b72693B746A',\n      56: '0x50f4220C82c9325dC99f729C3328FB5c338BEaae',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd\n  },\n  {\n    pid: 1,\n    risk: 5,\n    lpSymbol: 'LIFE-BNB LP',\n    lpAddresses: {\n      97: '0x197885A5af8ffdC945f2c5677A6E0F3A84C141A2',\n      56: '0x45b2eF2ECe32b34D20F6C6caD49043740B05f2A5',\n    },\n    tokenSymbol: 'LIFE',\n    tokenAddresses: {\n      97: '0xADA2270B0CB5b6254d3d48A6fEE55b72693B746A',\n      56: '0x50f4220C82c9325dC99f729C3328FB5c338BEaae',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb\n  },\n\n  {\n    pid: 4,\n    risk: 3,\n    lpSymbol: 'BNB-BUSD LP',\n    lpAddresses: {\n      97: '0xa75c80e7Ca70505AAB6062cF15A2cFC71b6138C0',\n      56: '0x1B96B92314C44b159149f7E0303511fB2Fc4774f',\n    },\n    tokenSymbol: 'BNB',\n    tokenAddresses: {\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd\n  },\n]\n\nexport default farms\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap-libs/uikit'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    @import url('https://fonts.googleapis.com/css2?family=Metamorphous&amp;display=swap');\n    font-family: 'Montserrat', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  // AR,\n  // CA,\n  ZHCN,\n  ZHTW,\n  // CS,\n  // DA,\n  // DE,\n  // NL,\n  // FIL,\n  // FI,\n  // FR,\n  // EL,\n  // HI,\n  // HU,\n  // ID,\n  // IT,\n  // JA,\n  // KO,\n  // PTBR,\n  // RO,\n  // RU,\n  // SR,\n  // ESES,\n  // SVSE,\n  // TA,\n  // TR,\n  // UK,\n  // VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`)\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then((r) => r.json())\n        // fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error('ERROR')\n          console.error(e)\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={dark}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@pancakeswap-libs/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x279d41f3f78fe5c1f0ba41ae963d6e545113c973',\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://exchange.pancakeswap.finance/#/pool',\n      },\n    ],\n  },\n  {\n    label: 'Farm LIFE',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Mint NFTs',\n    icon: 'NftIcon',\n    href: '/nft',\n  },\n  {\n    label: 'My NFT Collection',\n    icon: 'NftIcon',\n    href: '/my-collection',\n  },\n  {\n    label: 'External Pools',\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: 'More',\n    icon: 'MoreIcon',\n    items: [\n      // {\n      //   label: 'Voting',\n      //   href: 'https://voting.pancakeswap.finance',\n      // },\n      {\n        label: 'Github',\n        href: 'https://github.com/vladprotocol',\n      },\n      {\n        label: 'Overview',\n        href: 'https://vlad-finance.medium.com/introducing-vlad-token-and-the-path-to-immortality-ce96990fdf66/',\n      },\n      // {\n      //   label: 'Roadmap',\n      //   href: 'https://vlad-finance.medium.com/roadmap/',\n      // },\n    ],\n  },\n  {\n    label: 'DefiYield Audit Coming Soon',\n    icon: 'NftIcon',\n    href: '#',\n  },\n  {\n    label: 'CERTIK Audit Coming Soon',\n    icon: 'NftIcon',\n    href: '#',\n  },\n  // {\n  //   label: 'Lottery',\n  //   icon: 'TicketIcon',\n  //   href: '/lottery',\n  // },\n  // {\n  //   label: 'NFT',\n  //   icon: 'NftIcon',\n  //   href: '/nft',\n  // },\n]\n\nexport default config\n","export default __webpack_public_path__ + \"static/media/pancake.f9af3c6d.png\";","export default __webpack_public_path__ + \"static/media/telegram.b56490a8.svg\";","export default __webpack_public_path__ + \"static/media/twitter.acf9a8fb.svg\";","export default __webpack_public_path__ + \"static/media/medium.74ee6371.svg\";","export default __webpack_public_path__ + \"static/media/vlad-circle.ff02a5a1.png\";","export default __webpack_public_path__ + \"static/media/life.aad83452.png\";","export default __webpack_public_path__ + \"static/media/bg-footer.c4a28f99.jpg\";","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { Menu as UikitMenu, Button } from '@pancakeswap-libs/uikit'\nimport config from './config'\nimport './style.css'\nimport bscscanLogo from './bscscan.png'\nimport pancakeLogo from './pancake.png'\nimport telegramLogo from './telegram.svg'\nimport twitterLogo from './twitter.svg'\nimport mediumLogo from './medium.svg'\nimport vladLogo from './vlad-circle.png'\nimport lifeLogo from './life.png'\nimport bgFooter from './bg-footer.jpg'\nimport soundCloudLogo from './soundcloud.png'\n\nconst Footer = styled.div`\n  height: 400px;\n  background: #171717;\n  width: 100%;\n  text-align: center;\n  padding: 20px;\n  background: url(${bgFooter}) no-repeat;\n  background-size: cover;\n  background-position: 100% 0;\n`\n\nconst Social = styled.div`\n  display: inline-block;\n`\n\nconst SocialHeader = styled(Social)`\n  float: right;\n  padding: 10px;\n`\n\nconst SocialFooter = styled(Social)`\n  width: 100%;\n  text-align: center;\n  padding: 30px;\n\n  @media (max-width: 678px) {\n    padding: 0px;\n  }\n`\n\nconst Container = styled.div`\n  margin-top: 45px;\n`\n\nconst SocialImageHeader = styled.img`\n  margin-right: 10px;\n  width: 23px;\n`\n\nconst SocialImageFooter = styled.img`\n  width: 40px;\n  margin: 10px;\n  @media (max-width: 678px) {\n    width: 32px;\n  }\n`\n\nconst Logo = styled.img`\n  width: 70px;\n  margin: 20px;\n`\n\nconst LiveLinkGroup = styled.div`\n  margin: 20px;\n\n  @media (max-width: 678px) {\n    margin: 20px 0;\n    font-size: 12px;\n  }\n`\n\nconst LiveLink = styled.a`\n  color: white;\n  margin: 10px;\n  display: inline-block;\n`\n\nconst SocialLink = styled.a`\n  color: 'white';\n`\n\nconst FooterCopyRight = styled.div`\n  color: white;\n`\n\nconst InlineDiv = styled.div`\n  display: inline;\n`\n\nconst AudioPlayer = styled.audio`\n  margin-right: 10px;\n  @media (max-width: 1300px) {\n    width: 100px;\n  }\n`\n\nconst AudioDescription = styled.span`\n  font-size: 11px !important;\n`\n\nconst AudioDescriptionA = styled.a`\n  font-size: 11px !important;\n`\n\nconst CustomButton = styled(Button)`\n  height: 22px;\n  margin-left: 10px;\n`\n\nconst CustomI = styled.i`\n  width: 16px;\n  height: 16px;\n  margin-right: 10px;\n`\n\nlet vladValue = 0\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n\n  fetch('https://api.coingecko.com/api/v3/simple/price?ids=vlad-finance&vs_currencies=usd')\n    .then((res) => res.json())\n    .then(\n      (result) => {\n        vladValue = Math.round(result['vlad-finance'].usd * 100) / 100\n      },\n      (error) => {\n        vladValue = 0\n      },\n    )\n\n  return (\n    <div className=\"body-bg\">\n      <section className=\"topsmnav-bg mb-4\">\n        <div className=\"container\">\n          <nav className=\"tp-sm-wrap\">\n            <div className=\"row\">\n              <div className=\"tp-vlad\">\n                <ul>\n                  <li>\n                    <a href=\"https://vlad.finance\" target=\"_blank\" rel=\"noreferrer\">\n                      Vlad.Finance\n                    </a>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"tp-audio\">\n                <div className=\"tp-inner\">\n                  <ul>\n                    <li>\n                      <AudioDescription>\n                        Listen to DJ Ezra - Live From $VLADHalla\n                        <AudioPlayer controls>\n                          <source src=\"./dj-erza.mp3\" type=\"audio/mpeg\" />\n                          <track kind=\"captions\" />\n                        </AudioPlayer>\n                        <AudioDescriptionA href=\"https://soundcloud.app.goo.gl/kHiyk\" target=\"_blank\" rel=\"noreferrer\">\n                          Enjoying $LIFE! by DJ Ezra Is Back! on #SoundCloud\n                        </AudioDescriptionA>\n                      </AudioDescription>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"top-sm-nav\">\n                <ul>\n                  <SocialHeaderLink link=\"https://t.me/VladFinanceOfficial\" src={telegramLogo} alt=\"Telegram\" />\n                  <SocialHeaderLink link=\"https://vlad-finance.medium.com\" src={mediumLogo} alt=\"Medium\" />\n                  <SocialHeaderLink link=\"https://twitter.com/VladFinance\" src={twitterLogo} alt=\"Twitter\" />\n                  <SocialHeaderLink\n                    link=\"https://bscscan.com/token/0x279d41f3f78fe5c1f0ba41ae963d6e545113c973\"\n                    src={vladLogo}\n                    alt=\"Vlad Token\"\n                  />\n                  <SocialHeaderLink\n                    link=\"https://bscscan.com/token/0x50f4220C82c9325dC99f729C3328FB5c338BEaae\"\n                    src={lifeLogo}\n                    alt=\"Life Token\"\n                  />\n                  <SocialHeaderLink\n                    link=\"https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x279d41f3f78fe5c1f0ba41ae963d6e545113c973\"\n                    src={pancakeLogo}\n                    alt=\"Buy Vlad\"\n                  />\n                  <SocialHeaderLink\n                    link=\"https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x50f4220C82c9325dC99f729C3328FB5c338BEaae\"\n                    src={pancakeLogo}\n                    alt=\"Buy Life\"\n                  />\n                  <CustomButton variant=\"primary\">\n                    <CustomI>\n                      <img src={vladLogo} className=\"img-fluid\" alt=\"Vlad Token\" />\n                    </CustomI>\n                    $ {vladValue}\n                  </CustomButton>\n                </ul>\n              </div>\n            </div>\n          </nav>\n        </div>\n      </section>\n      <Container>\n        <UikitMenu\n          account={account}\n          login={connect}\n          logout={reset}\n          isDark={isDark}\n          currentLang={selectedLanguage && selectedLanguage.code}\n          langs={allLanguages}\n          setLang={setSelectedLanguage}\n          cakePriceUsd={cakePriceUsd.toNumber()}\n          links={config}\n          priceLink=\"https://bscscan.com/token/0x50f4220C82c9325dC99f729C3328FB5c338BEaae\"\n          {...props}\n        />\n      </Container>\n      <Footer>\n        <SocialFooter>\n          <SocialFooterLink link=\"https://t.me/VladFinanceOfficial\" src={telegramLogo} alt=\"Telegram\" />\n          <SocialFooterLink link=\"https://vlad-finance.medium.com\" src={mediumLogo} alt=\"Medium\" />\n          <SocialFooterLink link=\"https://twitter.com/VladFinance\" src={twitterLogo} alt=\"Twitter\" />\n          <SocialFooterLink\n            link=\"https://bscscan.com/token/0x279d41f3f78fe5c1f0ba41ae963d6e545113c973\"\n            src={vladLogo}\n            alt=\"Vlad Token\"\n          />\n          <SocialFooterLink\n            link=\"https://bscscan.com/token/0x50f4220C82c9325dC99f729C3328FB5c338BEaae\"\n            src={lifeLogo}\n            alt=\"Life Token\"\n          />\n          <SocialFooterLink\n            link=\"https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x279d41f3f78fe5c1f0ba41ae963d6e545113c973\"\n            src={pancakeLogo}\n            alt=\"Buy Vlad\"\n          />\n          <SocialFooterLink\n            link=\"https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x50f4220C82c9325dC99f729C3328FB5c338BEaae\"\n            src={pancakeLogo}\n            alt=\"Buy Life\"\n          />\n        </SocialFooter>\n        <Logo src={vladLogo} alt=\"vlad.finance\" />\n        <LiveLinkGroup>\n          <RankingLink link=\"https://www.coingecko.com/en/coins/vlad-finance\" name=\"CoinGecko\" />\n          <RankingLink\n            link=\"https://goswappcharts.web.app/?isbsc=true&tokenId=0x279d41f3f78fe5c1f0ba41ae963d6e545113c973\"\n            name=\"GoSwapp\"\n          />\n          <RankingLink link=\"https://nomics.com/assets/vlad-vlad-finance\" name=\"Nomics\" />\n          <RankingLink link=\"https://www.livecoinwatch.com/price/VladFinance-VLAD\" name=\"LiveCoinWatch\" />\n          <RankingLink link=\"https://coinmarketcap.com/currencies/vlad-finance\" name=\"CoinMarketCap\" />\n        </LiveLinkGroup>\n        <FooterCopyRight>© Vlad Finance. All Rights Reserved</FooterCopyRight>\n      </Footer>\n    </div>\n  )\n}\n\nexport default Menu\n\nconst RankingLink = (value) => {\n  const link = value.link\n  const name = value.name\n  return (\n    <LiveLink target=\"_blank\" href={link}>\n      {name}\n    </LiveLink>\n  )\n}\n\nconst SocialFooterLink = (value) => {\n  const link = value.link\n  const src = value.src\n  const alt = value.alt\n  return (\n    <SocialLink target=\"_blank\" title={alt} href={link}>\n      <SocialImageFooter src={src} alt={alt} />\n    </SocialLink>\n  )\n}\n\nconst SocialHeaderLink = (value) => {\n  const link = value.link\n  const src = value.src\n  const alt = value.alt\n  return (\n    <li>\n      <a href={link} title={alt} target=\"_blank\" rel=\"noreferrer\">\n        <div>\n          <img src={src} className=\"img-fluid\" alt={alt} />\n        </div>\n      </a>\n    </li>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap-libs/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useEffect, Suspense, lazy } from 'react'\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData, useFetchPriceList } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\n// const Lottery = lazy(() => import('./views/Lottery'))\nconst Pools = lazy(() => import('./views/Pools'))\n// const Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Nft = lazy(() => import('./views/Nft'))\nconst Legendary = lazy(() => import('./views/Legendary'))\nconst Epic = lazy(() => import('./views/Epic'))\nconst MyCollection = lazy(() => import('./views/MyCollection'))\nconst MyEpicCollection = lazy(() => import('./views/MyEpicCollection'))\nconst MyLegendaryCollection = lazy(() => import('./views/MyLegendaryCollection'))\nconst Detail = lazy(() => import('./views/Detail'))\nconst LegendaryDetail = lazy(() => import('./views/LegendaryDetail'))\nconst EpicDetail = lazy(() => import('./views/EpicDetail'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData()\n  useFetchPriceList()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/coffin\">\n              <Farms tokenMode />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            {/* <Route path=\"/lottery\"> */}\n            {/*  <Lottery /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/ifo\"> */}\n            {/*  <Ifos /> */}\n            {/* </Route> */}\n            <Route path=\"/nft\">\n              <Nft />\n            </Route>\n            <Route path=\"/legendary\">\n              <Legendary />\n            </Route>\n            <Route path=\"/epic\">\n              <Epic />\n            </Route>\n            <Route path=\"/my-collection\">\n              <MyCollection />\n            </Route>\n            <Route path=\"/my-epic-collection\">\n              <MyEpicCollection />\n            </Route>\n            <Route path=\"/my-legendary-collection\">\n              <MyLegendaryCollection />\n            </Route>\n            <Route path=\"/detail/:id\" component={Detail} />\n            <Route path=\"/legendary-detail/:id\" component={LegendaryDetail} />\n            <Route path=\"/epic-detail/:id\" component={EpicDetail} />\n            {/* Redirect */}\n            {/* <Route path=\"/staking\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport * as bsc from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID)\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <bsc.UseWalletProvider\n            chainId={chainId}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </bsc.UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\nimport { State, Farm, Pool, PriceState } from './types'\nimport { QuoteToken } from '../config/constants/types'\nimport { fetchPrices } from './prices'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\n// Prices\nexport const useFetchPriceList = () => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchPrices())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useGetApiPrices = () => {\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\n  return prices\n}\n\nexport const useGetApiPrice = (address: string) => {\n  const prices = useGetApiPrices()\n\n  if (!prices) {\n    return null\n  }\n\n  return prices[address.toLowerCase()]\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(1)\n  const bnbBusdFarm = useFarmFromPid(2)\n\n  const bnbBusdPrice = bnbBusdFarm.tokenPriceVsQuote ? new BigNumber(1).div(bnbBusdFarm.tokenPriceVsQuote) : ZERO\n  const cakeBusdPrice = cakeBnbFarm.tokenPriceVsQuote ? bnbBusdPrice.times(cakeBnbFarm.tokenPriceVsQuote) : ZERO\n\n  return cakeBusdPrice\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 4 // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms()\n  const bnbPrice = usePriceBnbBusd()\n  const cakePrice = usePriceCakeBusd()\n  let value = new BigNumber(0)\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = bnbPrice.times(farm.lpTotalInQuoteToken)\n      } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = cakePrice.times(farm.lpTotalInQuoteToken)\n      } else {\n        val = farm.lpTotalInQuoteToken\n      }\n      value = value.plus(val)\n    }\n  }\n  return value\n}\n"],"sourceRoot":""}